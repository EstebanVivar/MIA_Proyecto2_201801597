----------------------------------------------------
CREATE OR REPLACE TRIGGER INSERT_EVENT
BEFORE INSERT OR UPDATE ON EVENTO
FOR EACH ROW
DECLARE

JOURNEY_END JORNADA.FECHA_FIN%TYPE;
JOURNEY_PHASE JORNADA.ID_FASE%TYPE;

BEGIN
SELECT JORNADA.FECHA_FIN, JORNADA.ID_FASE
INTO JOURNEY_END , JOURNEY_PHASE
FROM EVENTO
INNER JOIN JORNADA
ON EVENTO.ID_JORNADA=JORNADA.ID_JORNADA;


IF (:NEW.FECHA < SYSDATE)
THEN RAISE_APPLICATION_ERROR(-20001, 'ERROR FECHA');
END IF;

IF (:NEW.FECHA > JOURNEY_END)
THEN RAISE_APPLICATION_ERROR(-20001, 'ERROR JORNADA');
END IF;

IF ((:OLD.MARCADOR_LOCAL != NULL) AND (:OLD.MARCADOR_VISITA != NULL))
THEN  RAISE_APPLICATION_ERROR(-20001, 'ERROR RESULTADO');
END IF;

IF (JOURNEY_PHASE = 1)
THEN  RAISE_APPLICATION_ERROR(-20001, 'ERROR JORNADA ACTIVA');
END IF;

END;
--------------------------------------------------------------
CREATE OR REPLACE TRIGGER INSERT_SEASON
BEFORE INSERT ON TEMPORADA
    FOR EACH ROW
    DECLARE
    COUNTER NUMBER;
BEGIN
    SELECT COUNT(*) INTO COUNTER
    FROM TEMPORADA
    WHERE :NEW.NOMBRE = NOMBRE;
    IF (COUNTER >0)
    THEN RAISE_APPLICATION_ERROR(-20001, 'ERROR NOMBRE');
    END IF;
END;
---------------------------------------------------------------
CREATE OR REPLACE TRIGGER INSERT_SPORT
BEFORE INSERT ON DEPORTE
    FOR EACH ROW
    DECLARE
    COUNTER NUMBER;
BEGIN
    SELECT COUNT(*) INTO COUNTER
    FROM DEPORTE
    WHERE NOMBRE=:NEW.NOMBRE ;
    IF (COUNTER >0)
    THEN RAISE_APPLICATION_ERROR(-20001, 'YA EXISTE DEPORTE');
    END IF;
END;
--------------------------------------------------------------
CREATE OR REPLACE TRIGGER INSERT_USER
BEFORE INSERT OR UPDATE ON USUARIO
FOR EACH ROW
DECLARE
NOW NUMBER:=EXTRACT(YEAR FROM  SYSDATE);
BIRTH NUMBER:=EXTRACT(YEAR FROM :NEW.NACIMIENTO);
COUNTER NUMBER;

BEGIN

IF ((NOW - BIRTH)<18)
THEN RAISE_APPLICATION_ERROR(-20001, 'ERROR EDAD');
END IF;

IF (:NEW.USUARIO!=:OLD.USUARIO)
THEN
    SELECT COUNT(*) INTO COUNTER FROM USUARIO WHERE USUARIO = :NEW.USUARIO;
    IF (COUNTER != 0)
        THEN RAISE_APPLICATION_ERROR(-20001, 'ERROR USUARIO');
        END IF;
END IF;

IF (NOT REGEXP_LIKE(:NEW.EMAIL, '^(\S+)\@(\S+)\.(\S+)$'))
    THEN RAISE_APPLICATION_ERROR(-20001, 'ERROR CORREO');
    END IF;

IF NOT( REGEXP_LIKE(:NEW.CLAVE, '^.*[0-9]', 'c')
    AND REGEXP_LIKE(:NEW.CLAVE, '^.*[a-z]','c')
    AND REGEXP_LIKE(:NEW.CLAVE, '^.*[A-Z]','c')
    AND REGEXP_LIKE(:NEW.CLAVE,'(\S){9,}$', 'c'))
    THEN RAISE_APPLICATION_ERROR(-20001, 'ERROR CLAVE');
END IF;


END;

--------------------------------------------------------
CREATE OR REPLACE TRIGGER INSERT_JORNADA
BEFORE INSERT ON JORNADA 
    FOR EACH ROW 
    DECLARE
    COUNTER NUMBER;
BEGIN
    SELECT COUNT(*) INTO COUNTER 
    FROM JORNADA 
    WHERE :NEW.NOMBRE = NOMBRE
    AND :NEW.ID_TEMPORADA = ID_TEMPORADA;
    IF (COUNTER >0) 
    then RAISE_APPLICATION_ERROR(-20001, 'Ya existe Jornada para temporada'); 
    END IF;
END;