-----------------------------1-----------------------------
CREATE OR REPLACE PROCEDURE INSERT_EVENT
(
    HOME IN EVENTO.LOCAL%TYPE,
    VISIT IN EVENTO.VISITANTE%TYPE,
    MATCH_DATE NVARCHAR2,
    S_HOME IN EVENTO.MARCADOR_LOCAL%TYPE,
    S_VISIT IN EVENTO.MARCADOR_VISITA%TYPE,
    JOURNEY IN JORNADA.NOMBRE%TYPE,
    SEASON IN TEMPORADA.NOMBRE%TYPE,
    SPORT IN DEPORTE.NOMBRE%TYPE
)AS
SPORT_ID DEPORTE.ID_DEPORTE%TYPE;
JOURNEY_ID JORNADA.ID_JORNADA%TYPE;
COUNTER NUMBER;
BEGIN
    SELECT DEPORTE.ID_DEPORTE
    INTO SPORT_ID
    FROM DEPORTE
    WHERE DEPORTE.NOMBRE = SPORT;

    SELECT JORNADA.ID_JORNADA
    INTO JOURNEY_ID
    FROM JORNADA
    INNER JOIN TEMPORADA
    ON JORNADA.ID_TEMPORADA=TEMPORADA.ID_TEMPORADA
    WHERE JORNADA.NOMBRE = JOURNEY
    AND TEMPORADA.NOMBRE=SEASON;

    SELECT COUNT(*) INTO COUNTER FROM EVENTO
    WHERE LOCAL = HOME
    and VISITANTE = VISIT
    AND ID_JORNADA = JOURNEY_ID;

    IF ( COUNTER >0)
        then RAISE_APPLICATION_ERROR(-20001, 'EVENTO YA EXISTENTE'); 
    END IF;

    INSERT INTO EVENTO(
        LOCAL,    VISITANTE,    FECHA,    MARCADOR_LOCAL,
        MARCADOR_VISITA,    ID_JORNADA,    ID_DEPORTE
    )
    VALUES
    (
        HOME,    VISIT,    TO_DATE(MATCH_DATE,'dd/mm/yyyy hh24:mi'),
        S_HOME,    S_VISIT,    JOURNEY_ID,    SPORT_ID
    );
END INSERT_EVENT;
---------------------------------2------------------------------------
CREATE OR REPLACE PROCEDURE INSERT_JOURNEY
(
    JOURNEY IN JORNADA.NOMBRE%TYPE,
    SEASON IN TEMPORADA.NOMBRE%TYPE,
    INIT_DATE IN NVARCHAR2,
    WEEK IN NVARCHAR2
)AS

ADD_WEEK NUMBER;
SEASON_ID TEMPORADA.ID_TEMPORADA%TYPE;
STATUS_ID   FASE.ID_FASE%TYPE;

BEGIN
    SELECT  TEMPORADA.ID_TEMPORADA
    INTO SEASON_ID
    FROM TEMPORADA
    WHERE TEMPORADA.NOMBRE=SEASON;

    IF WEEK='1'
        THEN ADD_WEEK:=0;
    ELSIF WEEK='2'
        THEN ADD_WEEK:=7;
    ELSIF WEEK='3'
        THEN ADD_WEEK:=14;
    ELSIF WEEK='4'
        THEN ADD_WEEK:=21;
    END IF;

    IF TO_DATE(INIT_DATE,'YYYY/MM')+ADD_WEEK+7<SYSDATE
        THEN STATUS_ID:=3;
    ELSE STATUS_ID:=1;
    END IF;

   INSERT INTO JORNADA(NOMBRE, FECHA_INICIO, FECHA_FIN, ID_TEMPORADA,ID_FASE)
   VALUES (JOURNEY,TO_DATE(INIT_DATE,'YYYY/MM')+ADD_WEEK,TO_DATE(INIT_DATE,'YYYY/MM')+ADD_WEEK+7,SEASON_ID,STATUS_ID);
END INSERT_JOURNEY;

----------------------------------3-----------------------------------
CREATE OR REPLACE PROCEDURE INSERT_SEASON
(
    NAME IN TEMPORADA.NOMBRE%TYPE,
    YEAR IN TEMPORADA.ANYO%TYPE,
    MONTH IN TEMPORADA.MES%TYPE,
    FINAL_DATE IN NVARCHAR2
)AS

BEGIN
   INSERT INTO TEMPORADA(NOMBRE, ANYO, MES, FECHA_FIN, ESTADO)
   VALUES (NAME,YEAR,MONTH,TO_DATE(FINAL_DATE, 'YYYY/MM')+30, 'F');
END INSERT_SEASON;

----------------------------------USUARIO-------------------------------
CREATE OR REPLACE PROCEDURE INSERT_USER
(
    NAME IN USUARIO.NOMBRE%TYPE,
    LAST IN USUARIO.APELLIDO%TYPE,
    PASS IN USUARIO.APELLIDO%TYPE,
    USER IN USUARIO.USUARIO%TYPE,
    BIRTH IN NVARCHAR2,
    EMAIL IN USUARIO.EMAIL%TYPE,
    PHOTO IN USUARIO.FOTO%TYPE    
)AS

BEGIN
   INSERT INTO USUARIO(NOMBRE,APELLIDO,CLAVE,USUARIO,NACIMIENTO,REGISTRO,EMAIL)
   VALUES (NAME,LAST,PASS,USER,TO_DATE(BIRTH, 'YYYY/MM/DD'), SYSDATE- 1/4,EMAIL);
END INSERT_USER;


CREATE OR REPLACE PROCEDURE UPDATE_USER
(
    ID IN USUARIO.ID_USUARIO%TYPE,
    NAME IN USUARIO.NOMBRE%TYPE,
    LAST IN USUARIO.APELLIDO%TYPE,
    PASS IN USUARIO.APELLIDO%TYPE,
    USER IN USUARIO.USUARIO%TYPE,
    BIRTH IN NVARCHAR2,
    MAIL IN USUARIO.EMAIL%TYPE,
    PHOTO IN USUARIO.FOTO%TYPE    
)AS

BEGIN
   UPDATE USUARIO
    SET NOMBRE = NAME,
        APELLIDO= LAST,
        CLAVE= PASS,
        USUARIO= USER,
        NACIMIENTO= TO_DATE(BIRTH,'YYYY/MM/DD'),
        USUARIO.EMAIL=MAIL
    WHERE ID_USUARIO=ID;

END UPDATE_USER;

----------------------------------5-------------------------------
CREATE OR REPLACE PROCEDURE INSERT_SPORT
(
    NAME IN DEPORTE.NOMBRE%TYPE,
    COLOUR IN DEPORTE.COLOR%TYPE,
    IMAGE IN DEPORTE.IMAGEN%TYPE
)AS

BEGIN
   INSERT INTO DEPORTE(NOMBRE, IMAGEN,COLOR)
   VALUES (NAME,IMAGE,COLOUR);
END INSERT_SPORT;

----------------------------------6---------------------------------
CREATE OR REPLACE PROCEDURE INSERT_SEASON_DETAIL
(
    USER IN USUARIO.USUARIO%TYPE,
    SEASON IN TEMPORADA.NOMBRE%TYPE,
    TIER IN MEMBRESIA.NOMBRE%TYPE
)AS

USER_ID  USUARIO.ID_USUARIO%TYPE;
SEASON_ID  TEMPORADA.ID_TEMPORADA%TYPE;
TIER_ID  MEMBRESIA.ID_MEMBRESIA%TYPE;

BEGIN
    SELECT USUARIO.ID_USUARIO
    INTO USER_ID
    FROM USUARIO
    WHERE USUARIO.USUARIO=USER;

    SELECT  TEMPORADA.ID_TEMPORADA
    INTO SEASON_ID
    FROM TEMPORADA
    WHERE TEMPORADA.NOMBRE=SEASON;

    SELECT  MEMBRESIA.ID_MEMBRESIA
    INTO TIER_ID
    FROM MEMBRESIA
    WHERE MEMBRESIA.NOMBRE=TIER;

    INSERT INTO DETALLE_MEMBRESIA(SUSCRIPCION, ID_USUARIO, ID_MEMBRESIA, ID_TEMPORADA)
    VALUES ('Y',USER_ID,TIER_ID,SEASON_ID);
END INSERT_SEASON_DETAIL;
-------------------------------------------
CREATE OR REPLACE PROCEDURE CLEAN
IS

BEGIN

DELETE FROM PREDICCION;
DELETE FROM EVENTO;
DELETE FROM DETALLE_MEMBRESIA;
DELETE FROM JORNADA;
DELETE FROM USUARIO WHERE USUARIO.USUARIO <> 'CVivar98';
DELETE FROM TEMPORADA;
DELETE FROM DEPORTE;

END CLEAN;
--------------------------------------------------
CREATE OR REPLACE PROCEDURE CARGA_PREDICCION
(
    S_LOCAL IN PREDICCION.LOCAL%TYPE,
    S_VISIT IN PREDICCION.VISITANTE%TYPE,
    USER    IN USUARIO.USUARIO%TYPE,
    JOURNEY IN JORNADA.NOMBRE%TYPE,
    SEASON  IN TEMPORADA.NOMBRE%TYPE,
    M_LOCAL IN EVENTO.LOCAL%TYPE,
    M_VISIT IN EVENTO.VISITANTE%TYPE
)
AS
    ID_USER NUMBER;
    ID_EVENT NUMBER;
BEGIN

    SELECT ID_USUARIO INTO ID_USER
    FROM USUARIO
    WHERE usuario.USUARIO =USER;


    SELECT ID_EVENTO INTO ID_EVENT
    FROM EVENTO
    INNER JOIN JORNADA
    ON EVENTO.ID_JORNADA = JORNADA.ID_JORNADA
    AND JORNADA.NOMBRE = JOURNEY
    INNER JOIN TEMPORADA
    ON JORNADA.ID_TEMPORADA = TEMPORADA.ID_TEMPORADA
    AND TEMPORADA.NOMBRE=SEASON
    WHERE EVENTO.LOCAL = M_LOCAL
    AND EVENTO.VISITANTE= M_VISIT;
    

    INSERT INTO PREDICCION(LOCAL, VISITANTE, ID_EVENTO, ID_USUARIO)
    VALUES (S_LOCAL,S_VISIT, ID_EVENT, ID_USER);
END CARGA_PREDICCION;